/* style.css - Add Tasks Page */
:root {
    --primary: #6c5ce7;
    --secondary: #a29bfe;
    --accent: #fd79a8;
    --light: #f8f9fa;
    --dark: #343a40;
    --success: #00b894;
    --warning: #fdcb6e;
    --danger: #d63031;
    --text: #2d3436;
    --bg-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  }
  
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  }
  
  body {
    background: var(--bg-gradient);
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem;
    color: var(--text);
  }
  
  .container {
    max-width: 600px;
    width: 100%;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    border-radius: 20px;
    padding: 2.5rem;
    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.3);
    animation: fadeIn 0.6s ease-out;
    text-align: center;
  }
  
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(30px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  h1 {
    color: var(--primary);
    margin-bottom: 2rem;
    font-size: 2.5rem;
    font-weight: 700;
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    position: relative;
    display: inline-block;
  }
  
  h1::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 4px;
    background: var(--accent);
    border-radius: 2px;
  }
  
  .task-input {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    margin-bottom: 2rem;
  }
  
  input {
    padding: 1rem;
    border: 2px solid #e0e0e0;
    border-radius: 12px;
    font-size: 1rem;
    transition: all 0.3s ease;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
  }
  
  input:focus {
    outline: none;
    border-color: var(--primary);
    box-shadow: 0 0 0 3px rgba(108, 92, 231, 0.2);
    transform: translateY(-2px);
  }
  
  input::placeholder {
    color: #b0b0b0;
  }
  
  #taskDueDate {
    cursor: pointer;
  }
  
  button {
    padding: 1rem 2rem;
    border: none;
    border-radius: 50px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    font-size: 1rem;
    position: relative;
    overflow: hidden;
  }
  
  button::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    transition: 0.5s;
  }
  
  button:hover::before {
    left: 100%;
  }
  
  #addTask {
    background: var(--primary);
    color: white;
    margin-top: 1rem;
  }
  
  #addTask:hover {
    background: #5a4bc9;
    transform: translateY(-3px);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2);
  }
  
  #viewTasks {
    background: var(--secondary);
    color: white;
    width: 100%;
    max-width: 300px;
    margin: 0 auto;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
  }
  
  #viewTasks:hover {
    background: #8f7ff8;
    transform: translateY(-3px);
  }
  
  .navigation {
    margin-top: 2rem;
  }
  
  /* Floating animation */
  /* .container {
    animation: float 6s ease-in-out infinite;
  }
   /* 

  @keyframes float {
    0% { transform: translateY(0px); }
    50% { transform: translateY(-10px); }
    100% { transform: translateY(0px); }
  } */
  
  /* Input focus animation */
  /* @keyframes inputFocus {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
  } */
  
  /* input:focus {
    animation: inputFocus 0.3s ease;
  } */
  
  /* Responsive Design */
  @media (max-width: 768px) {
    .container {
      padding: 1.8rem;
    }
    
    h1 {
      font-size: 2rem;
    }
    
    input, button {
      padding: 0.8rem;
    }
  }
  
  /* Success message animation */
  /* @keyframes successMessage {
    0% { opacity: 0; transform: scale(0.8); }
    50% { opacity: 1; transform: scale(1.05); }
    100% { opacity: 1; transform: scale(1); }
  } */
  
  .success-message {
    position: fixed;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    background: var(--success);
    color: white;
    padding: 1rem 2rem;
    border-radius: 50px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    animation: successMessage 0.5s ease;
    display: none;
  }